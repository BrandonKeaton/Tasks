evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[-1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram(c("Please", "tell", "me", "Im", "almost", "done"))
submit()
submit()
submit()
mad_libs(place = Beckley, adjective = "strange", noun = "moose")
mad_libs(place = "Beckley, adjective = "strange", noun = "moose")
mad_libs(place = "Beckley", adjective = "strange", noun = "moose")
submit()
"I love R"
"I" %p% "love" %p% "R!"
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y =cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x) = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stop Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stop Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stop Distance")
(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance)
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", title = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, xlim = c(10, 15))
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
str(mtcars)
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
trueMean <- 5
trueSD <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean1 <- 5
trueSD <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 < sample(population2, Size)
Sample2 <- sample(population2, Size)
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/codesimFxn04.R")
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
Alan <- makeBaby(PatGrandma, PatGrandpa)
Focus <- makeBaby(Brenda, Alan)
Brenda <- (MatGrandma, MatGrandpa)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
ToMom <- length( grep)("mom", Focus )) /  length( Focus )
ToMom <- length(grep("mom", Focus))/length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus))/length(Focus)
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01))/length(Focus)
ToMomDad <- length(grep("grandpa_mom", Focus))/length(Focus)
ManySiblings <- replicate(le3,length)(intersect)(Focus, makeBaby(Brenda, Alan)))/length(Focus))
ManySiblings <- replicate(le3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
ManySiblings <- replicate(1e3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(density(ManySiblings), main="" , xlab="proportion shared genes")
##
HWE <-function(p)  {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
##
HWE <-function(p)  {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
##
HWE <-function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
HWE <- function(p)  {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
HWE <- function(p)  {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from=0, to=1, by= 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"ab"], lwd=2, col="blue")
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple","blue"), lty=1, lwd=2, bty="n")
Pop <- simPop(500)
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
boxplot(Sample1, Sample2)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
Alan <- makeBaby(PatGrandma, PatGrandpa)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
ToMom <- length(grep("mom", Focus))/length(Focus)
ToMomDad <- length(grep("grandpa_mom", Focus))/length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus))/length(Focus)
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01))/length(Focus)
ManySiblings <- replicate(1e3,length(intersect(Focus, makeBaby(Brenda, Alan)))/length(Focus))
quantile(ManySiblings)
mean(ManySiblings)
##
HWE <-function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from=0, to=1, by= 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"ab"], lwd=2, col="blue")
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple","blue"), lty=1, lwd=2, bty="n")
setwd(C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05)
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
source("http://jonsmitchell.com/code/fxn05.r")
source("http://jonsmitchell.com/code/fxn05.R")
Popl <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd=2, btw="n")
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n=50, ngens = 100, init_p = 0.5, h=1, s=0)
## What is a test statistic
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum( ( ( Expectation- Observed) ^2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq), legend.text=c("expected", "observed")))
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
## The chi squared value for 4 10's is 10.
Expectation <- c(40)
Chisq <- sum( ( ( Expectation- Observed) ^2) / Expectation)
# The chi squared value for one column of 40 is 92.5
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/bio112labresults.csv", stringsAsFactors = F)
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
Avg <- mean(Chisqs)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results)[,3] ==i]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
for (i in backgrounds) {
Data <- Chisqs[which(results)[,3] ==i]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
Data <- Chisqs[which(results),[,3] ==i]
Data <- Chisqs[which(results)[,3] ==i)]
for (i in backgrounds) {
Data <- Chisqs[which(results)[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
counter <- counter + 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
#Simulation
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n=50, ngens = 100, init_p = 0.5, h=1, s=0)
Observed <- c(15, 15, 5, 5)
Chisq <- sum( ( ( Expectation- Observed) ^2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
## The chi squared value for 4 10's is 10.
Expectation <- c(40)
# The chi squared value for one column of 40 is 92.5
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
Avg <- mean(Chisqs)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty=2, lwd = 2,col='black')
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty=2, lwd = 2,col='black')
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3]==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter<- counter+1
}
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
Avg <- mean(Chisqs)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las=1, mar=c(4,4,1,1), mgp= c(2, 0.5, 0), tck=-0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty=2, lwd = 2,col='black')
#Simulation
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n=50, ngens = 100, init_p = 0.5, h=1, s=0)
Observed <- c(15, 15, 5, 5)
Chisq <- sum( ( ( Expectation- Observed) ^2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
## The chi squared value for 4 10's is 10.
Expectation <- c(40)
Chisq <- sum( ( ( Expectation- Observed) ^2) / Expectation)
# The chi squared value for one column of 40 is 92.5
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
setwd("C:\\Users\\Brandon\\Desktop\\Tasks\\Task_05")
### Reviewing the lab
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow","red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "green", "blue", "black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
## The chi squared value is very high when the bars are uneven, and very low when the bars are even. A small chi squared value means the expected and observed values are very similar.
# The average is about 61 which means that the results werent what was expected. SSince its much greater than the critical value there must be a significant difference.
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70) ) / length(Chisqs)
percSig <- round (100 * propSig)
#Yes i wouldn't have expected that 92% of the results were different from the expectation.
# No i imagine there are more factors.
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las=1, mar=c(4,4,1,1), mgp= c(2, 0.5, 0), tck=-0.01, cex.axis=1)
plot(1, 1, xlim=c(0,400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length (backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0,1), type="l",xlab="generation", ylab= "allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,1], lwd=2, col='red' )
legend("topleft", legend=c ("a", "b"), col=c("black", "red"), lwd=2, bty="n")
plotFit(nruns=10, n=50, ngens=100, init_p=0.5, h=1, s=0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum(((Expectation - Observed)^2)/2)
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2~"="~.(Chisq)), legend.text=c("expected", "observed"))
results<- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts<- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol<- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backroundAvgs <- tapply(CHisqs, results[,3], mean)
propSig<- length(which(Chisqs>11.70)/length(Chisqs))
percSig<- round(100*propSig)
par(las=1, mar=c(4,4,1,1), mgp= c(2, 0.5, 0), tck=-0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las=1, mar=c(4,4,1,1), mgp= c(2, 0.5, 0), tck=-0.01, cex.axis=1)
plot(1,1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at= 1:length(backgrounds), labels=backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter<-1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3]==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter<- counter+1
}
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty=2, lwd = 2,col='black')
